name: build

on: push

env:
  PROJECT: lua-language-server
  BIN: bin

jobs:
  compile:
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-18.04, target: linux }
          - { os: macos-latest, target: macos }
          - { os: windows-latest, target: windows }
    runs-on: ${{ matrix.job.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actboy168/setup-luamake@master

      - run: luamake

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT }}-${{ matrix.job.target }}
          path: ${{ env.BIN }}

      - name: Package
        if: startsWith(github.ref, 'refs/tags/')
        id: package
        shell: bash
        run: |
          # Some variables
          PKG_BASENAME="${{ env.PROJECT }}-${{ matrix.job.target }}"
          PKG_STAGING="ci_staging/${PKG_BASENAME}"

          # Making the staging area
          mkdir -p ${PKG_STAGING}

          # Copying binary and runtime files to staging area
          cp -r main.lua debugger.lua locale meta script ${{ env.BIN }} ${PKG_STAGING}

          # Creating release assets
          pushd "${PKG_STAGING}/" >/dev/null
          case "${{ matrix.job.target }}" in
            windows)
              PKG_NAME="${PKG_BASENAME}.zip"
              7z -y a ${PKG_NAME} * | tail -2
              ;;
            *)
              PKG_NAME="${PKG_BASENAME}.tar.gz"
              tar czf ${PKG_NAME} *
              ;;
          esac;
          popd >/dev/null

          echo ::set-output name=PKG_NAME::${PKG_NAME}
          echo ::set-output name=PKG_PATH::"${PKG_STAGING}/${PKG_NAME}"

      - name: Publish release assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          files: ${{ steps.package.outputs.PKG_PATH }}
